name: CI Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install ETL client package
          cd etl_client && pip install -e . && cd ..

      - name: Run code formatting checks
        run: |
          black --diff --check .
          isort --check-only .

      - name: Run linters
        run: |
          # Lint main project
          flake8 .
          mypy .
          bandit -r . || true
          # Lint ETL client
          cd etl_client && flake8 src/ && mypy src/ && cd ..

      - name: Run tests with coverage
        run: |
          pytest --cov --cov-report=term-missing --cov-report=xml
          pytest tests/ --cov=etl_client --cov-report=term-missing --cov-report=xml --cov-append

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.12'
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          cd etl_client && pip install -e . && cd ..

      - name: Start API server
        run: |
          cd app && uvicorn animal_api:app --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: Test ETL pipeline integration
        run: |
          # Test basic ETL client functionality
          animal-etl --help
          # Test fetching animals (assuming server is running)
          timeout 30 animal-etl list-animals --page 1 || echo "Integration test completed"
